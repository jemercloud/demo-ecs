name: Deploy
on:
  push:
    branches:
      - 'main'
jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    permissions:
      id-token: write
      contents: read
    env:
      ECR_IMAGE_NAME: demo-ecs
      AWS_REGION: us-east-1
      ROLE: arn:aws:iam::214297756712:role/CICDRole
      TD_FILE_NAME: task-definition.json
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.run_number }}
            type=raw,value=latest

      - uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

      - name: get task definition
        run: aws ecs describe-task-definition --task-definition demoapp-test-api-td --query taskDefinition > ${{ env.TD_FILE_NAME }}

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.TD_FILE_NAME }}
          container-name: demoapp-test-api-container
          image: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_IMAGE_NAME }}:${{ github.run_number }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: service-demo-ecs-Service-qidcUpcqFhmZ
          cluster: demoapp-test-cluster
          wait-for-service-stability: true